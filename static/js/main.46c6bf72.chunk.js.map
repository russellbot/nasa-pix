{"version":3,"sources":["components/FavoriteButton.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Navigation.js","components/loaf-rocket-1.svg","components/Loader.js","components/Added.js","constants.js","containers/App.js","actions.js","reportWebVitals.js","reducers.js","index.js"],"names":["FavoriteButton","props","saveFavorite","removeFavorite","object","page","className","onClick","Card","title","explanation","date","url","copyright","hdurl","searchWords","href","alt","src","highlightClassName","textToHighlight","autoEscape","CardList","pix","map","picture","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Navigation","loadMore","loadFavorites","id","Loader","loaderPic","Added","isAdded","CHANGE_SEARCH_FIELD","REQUEST_PICTURES_PENDING","REQUEST_PICTURES_SUCCESS","REQUEST_PICTURES_FAILED","REQUEST_FAVORITES_SUCCESS","REQUEST_FAVORITES_EMPTY","FAVORITES_PAGE","HOME_PAGE","ADD_FAVORITE","DELETE_FAVORITE","SHOW_CONFIRMATION","App","this","onRequestFavorites","onRequestPictures","searchField","onSearchChange","pictures","favorites","isPending","changePageFavorites","deleteFavorite","filterPictures","array","filter","pic","toLowerCase","includes","React","Component","connect","state","searchPictures","requestPictures","favoritesReducer","addedConfirmation","error","changePage","dispatch","event","text","target","value","payload","fetch","then","response","json","data","catch","localStorage","getItem","newFavorites","JSON","parse","changePageHome","push","setItem","stringify","setTimeout","addFavorite","filteredFavorites","item","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialStateSearch","initialStatePictures","initialStateFavorites","initialStateAdded","initialStatePage","logger","createLogger","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46c6bf72.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst FavoriteButton = (props) => {\r\n    const { saveFavorite, removeFavorite, object, page } = props;\r\n    if (page === 'favorites') {\r\n        return (<p className=\"clickable\" onClick={() => removeFavorite({object})}>Delete from Favorites</p>);\r\n    } else {\r\n        return(<p className=\"clickable\" onClick={() => saveFavorite({object})}>Add to Favorites</p>);\r\n    }\r\n}\r\n\r\nexport default FavoriteButton;","import React from 'react';\r\nimport Highlighter from 'react-highlight-words';\r\nimport FavoriteButton from './FavoriteButton';\r\nimport './Card.css'\r\n\r\nconst Card = (props) => {\r\n    const { title, explanation, date, url, copyright, hdurl, searchWords, saveFavorite, removeFavorite, object, page } = props;\r\n    return (\r\n        <div className='card'>\r\n            <a href={hdurl}>\r\n                <img alt='nasapicture' className=\"card-img-top\" src={url} />\r\n            </a>            \r\n            <div>\r\n                <div className=\"card-body\">\r\n                    <Highlighter className=\"card-title\" highlightClassName=\"highlight\" searchWords={[searchWords]} textToHighlight={title} autoEscape={true} />\r\n                    <FavoriteButton saveFavorite={saveFavorite} removeFavorite={removeFavorite} object={object} page={page} />                   \r\n                    <p><Highlighter className=\"card-explanation\" highlightClassName=\"highlight\" searchWords={[searchWords]} textToHighlight={explanation} autoEscape={true} /></p>\r\n                    <h5>{date} &nbsp;&nbsp; <Highlighter className=\"card-copyright\" highlightClassName=\"highlight\" searchWords={[searchWords]} textToHighlight={copyright} autoEscape={true} /></h5>\r\n                </div>                \r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ pix, searchWords, saveFavorite, removeFavorite, page }) => {\r\n    return (\r\n        <div className='images-container'>\r\n            {\r\n                pix.map((picture, i) => {\r\n                    return (\r\n                        <Card \r\n                            key={pix[i].title}\r\n                            searchWords={searchWords}\r\n                            saveFavorite={saveFavorite}\r\n                            removeFavorite={removeFavorite}\r\n                            title={pix[i].title} \r\n                            url={pix[i].url} \r\n                            explanation={pix[i].explanation} \r\n                            date={pix[i].date} \r\n                            copyright={pix[i].copyright}\r\n                            object={pix[i]}\r\n                            page={page}\r\n                        />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className='searchbox'>\r\n            <input \r\n            type='search' \r\n            placeholder='search pictures'\r\n            onChange={searchChange} \r\n            />\r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React from 'react';\r\n// import SearchBox from './SearchBox';\r\n\r\nconst Navigation = ({ loadMore, loadFavorites }) => {\r\n    return (\r\n        <div className=\"navigation-container\">\r\n            <span className=\"background\"></span>\r\n            <span className=\"title\"><h1>Nasa Pictures</h1></span>\r\n            <span className=\"navigation-items\" id=\"resultsNav\">\r\n                <h3 className=\"clickable\" onClick={loadFavorites}>Favorites</h3>\r\n                <h3>&nbsp;&nbsp;&nbsp;•&nbsp;&nbsp;&nbsp;</h3>\r\n                <h3 className=\"clickable\" onClick={loadMore}>Load More</h3>\r\n            </span>\r\n            {/* <span className=\"searchbox\"><SearchBox /></span> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navigation;","export default __webpack_public_path__ + \"static/media/loaf-rocket-1.05d116a7.svg\";","import React from 'react';\r\nimport loaderPic from './loaf-rocket-1.svg';\r\nimport './Loader.css';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <img src={loaderPic} alt=\"Rocket Loading Animation\"></img>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React from 'react';\r\n\r\nconst Added = ({ isAdded }) => {\r\n    if (isAdded) {\r\n        return (\r\n            <div className=\"save-confirmed\">\r\n                <h1>ADDED!</h1>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (<div></div>);\r\n    }       \r\n}\r\n\r\nexport default Added;","export const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\r\n\r\nexport const REQUEST_PICTURES_PENDING = 'REQUEST_PICTURESS_PENDING';\r\nexport const REQUEST_PICTURES_SUCCESS = 'REQUEST_PICTURES_SUCCESS';\r\nexport const REQUEST_PICTURES_FAILED = 'REQUEST_PICTURES_FAILED';\r\n\r\nexport const REQUEST_FAVORITES_SUCCESS = 'REQUEST_FAVORITES_SUCCESS';\r\nexport const REQUEST_FAVORITES_EMPTY = 'REQUEST_FAVORITES_EMPTY';\r\n\r\nexport const FAVORITES_PAGE = 'FAVORITES_PAGE';\r\nexport const HOME_PAGE = 'HOME_PAGE';\r\n\r\nexport const ADD_FAVORITE = 'ADD_FAVORITE';\r\nexport const DELETE_FAVORITE = 'DELETE_FAVORITE';\r\nexport const SHOW_CONFIRMATION = 'SHOW_CONFIRMATION';","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Navigation from '../components/Navigation';\r\nimport Loader from '../components/Loader';\r\nimport Added from '../components/Added';\r\n\r\nimport { setSearchfield, requestPictures, requestFavorites, switchPageFavorites, switchPageHome, addFavorite, removeFavorite } from '../actions'\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        searchField: state.searchPictures.searchField,\r\n        pictures: state.requestPictures.pictures,\r\n        favorites: state.favoritesReducer.favorites,\r\n        isAdded: state.addedConfirmation.isAdded,\r\n        isPending: state.requestPictures.isPending,\r\n        error: state.requestPictures.error, \r\n        page: state.changePage.page\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSearchChange: (event) => dispatch(setSearchfield(event.target.value)),\r\n        onRequestPictures: () => dispatch(requestPictures()),\r\n        onRequestFavorites: () => dispatch(requestFavorites()),\r\n        changePageFavorites: () => dispatch(switchPageFavorites()),\r\n        changePageHome: () => dispatch(switchPageHome()),\r\n        saveFavorite: (picture) => dispatch(addFavorite(picture)),\r\n        deleteFavorite: (picture) => dispatch(removeFavorite(picture))\r\n    }\r\n}\r\n\r\nclass App extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.onRequestFavorites();\r\n        this.props.onRequestPictures();                 \r\n    }\r\n    \r\n    render() {\r\n        const { searchField, onSearchChange, pictures, favorites, isPending, changePageFavorites, isAdded, saveFavorite, deleteFavorite, page, onRequestPictures } = this.props;\r\n        const searchWords = searchField;   \r\n\r\n        const filterPictures = (array) => array.filter(pic => {\r\n            // Account for pictures without copyright information\r\n            if (!pic.copyright) {pic.copyright = '';}\r\n            // Return pictures with tite, explanation, or copyright that match the searchbox            \r\n            return (\r\n                pic.title.toLowerCase().includes(searchField.toLowerCase()) || \r\n                pic.explanation.toLowerCase().includes(searchField.toLowerCase()) || \r\n                pic.copyright.toLowerCase().includes(searchField.toLowerCase())\r\n            );\r\n        })\r\n\r\n        if (isPending) {\r\n            return (\r\n                <Loader />\r\n            );\r\n        } else if (this.props.page === 'home') {\r\n            return (\r\n                <div className=\"container\">\r\n                    <Navigation loadMore={onRequestPictures} loadFavorites={changePageFavorites}/>\r\n                    <span className=\"searchbox\"><SearchBox searchChange={onSearchChange} /></span>\r\n                    <CardList pix={filterPictures(pictures)} saveFavorite={saveFavorite} searchWords={searchWords} />\r\n                    <Added isAdded={isAdded} />\r\n                </div>        \r\n            );\r\n        } else if (this.props.page === 'favorites') {\r\n            return (\r\n                <div className=\"container\">\r\n                    <Navigation loadMore={onRequestPictures} loadFavorites={changePageFavorites}/>\r\n                    <span className=\"searchbox\"><SearchBox searchChange={onSearchChange} /></span>\r\n                    <CardList pix={filterPictures(favorites)} removeFavorite={deleteFavorite} searchWords={searchWords} page={page} />\r\n                </div>\r\n            ); \r\n        }             \r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import {\r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_PICTURES_PENDING,\r\n    REQUEST_PICTURES_SUCCESS,\r\n    REQUEST_PICTURES_FAILED,\r\n    REQUEST_FAVORITES_SUCCESS,\r\n    REQUEST_FAVORITES_EMPTY,\r\n    FAVORITES_PAGE,\r\n    HOME_PAGE,\r\n    ADD_FAVORITE,\r\n    DELETE_FAVORITE,\r\n    SHOW_CONFIRMATION\r\n} from './constants.js';\r\n\r\nexport const setSearchfield = (text) => ({\r\n    type: CHANGE_SEARCH_FIELD,\r\n    payload: text\r\n})\r\n\r\nexport const requestPictures = () => (dispatch) => {\r\n    dispatch({ type: REQUEST_PICTURES_PENDING});\r\n    fetch('https://api.nasa.gov/planetary/apod?api_key=DEMO_KEY&count=10')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            dispatch({ type: REQUEST_PICTURES_SUCCESS, payload: data }); \r\n            dispatch({ type: HOME_PAGE, payload: 'home' });\r\n        })\r\n        .catch(error => dispatch({ type: REQUEST_PICTURES_FAILED, payload: error }))\r\n}\r\n\r\nexport const requestFavorites = () => (dispatch) => {\r\n    if(localStorage.getItem('nasaFavorites')) {\r\n        let newFavorites = JSON.parse(localStorage.getItem('nasaFavorites'));\r\n        dispatch({ type: REQUEST_FAVORITES_SUCCESS, payload: newFavorites })\r\n    } else {\r\n        dispatch({ type: REQUEST_FAVORITES_EMPTY, payload: [] })\r\n    }\r\n}\r\n\r\nexport const switchPageFavorites = () => ({\r\n    type: FAVORITES_PAGE,\r\n    payload: 'favorites'\r\n})\r\n\r\nexport const switchPageHome = () => ({\r\n    type: HOME_PAGE, \r\n    payload: 'home'\r\n});\r\n\r\nexport const addFavorite = (picture) => (dispatch) => {\r\n    let newFavorites = JSON.parse(localStorage.getItem('nasaFavorites'));\r\n    if(!newFavorites.includes(picture.object)) {\r\n        // add picture to favorites array\r\n        newFavorites.push(picture.object);\r\n        dispatch({ type: ADD_FAVORITE, payload: newFavorites })\r\n        // Set favorites in localStorage\r\n        localStorage.setItem('nasaFavorites', JSON.stringify(newFavorites));\r\n        // Show save confirmation for 2 seconds\r\n        dispatch({ type: SHOW_CONFIRMATION, payload: true })\r\n        setTimeout(() => {\r\n            dispatch({ type: SHOW_CONFIRMATION, payload: false })\r\n        }, 2000);\r\n    }\r\n}\r\n\r\nexport const removeFavorite = (picture) => (dispatch) => {\r\n    let newFavorites = JSON.parse(localStorage.getItem('nasaFavorites'));\r\n    // remove the selected picture\r\n    const filteredFavorites = newFavorites.filter((item) => item.explanation !== picture.object.explanation);\r\n    dispatch({ type: DELETE_FAVORITE, payload: filteredFavorites })\r\n    // save new favorites array in local storage\r\n    localStorage.setItem('nasaFavorites', JSON.stringify(filteredFavorites));\r\n    // reload favorites page\r\n    dispatch({ type: FAVORITES_PAGE, payload: 'favorites' })   \r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n    CHANGE_SEARCH_FIELD,\r\n    REQUEST_PICTURES_PENDING,\r\n    REQUEST_PICTURES_SUCCESS,\r\n    REQUEST_PICTURES_FAILED,\r\n    REQUEST_FAVORITES_SUCCESS,\r\n    REQUEST_FAVORITES_EMPTY,\r\n    FAVORITES_PAGE,\r\n    HOME_PAGE,\r\n    ADD_FAVORITE,\r\n    DELETE_FAVORITE,\r\n    SHOW_CONFIRMATION\r\n} from './constants.js';\r\n\r\nconst initialStateSearch = {\r\n    searchField: ''\r\n}\r\n\r\nexport const searchPictures = (state=initialStateSearch, action={}) => {\r\n    switch(action.type) {\r\n        case CHANGE_SEARCH_FIELD:\r\n            return { ...state, searchField: action.payload }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialStatePictures = {\r\n    isPending: false,\r\n    pictures: [],\r\n    error: ''\r\n}\r\n\r\nexport const requestPictures = (state=initialStatePictures, action={}) => {\r\n    switch(action.type) {\r\n        case REQUEST_PICTURES_PENDING:\r\n            return { ...state, isPending: true };\r\n        case REQUEST_PICTURES_SUCCESS:\r\n            return { ...state, pictures: action.payload, isPending: false };\r\n        case REQUEST_PICTURES_FAILED:\r\n            return { ...state, error: action.payload, isPending: false };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialStateFavorites = {\r\n    favorites: []\r\n}\r\n\r\nexport const favoritesReducer = (state=initialStateFavorites, action={}) => {\r\n    switch(action.type) {\r\n        case REQUEST_FAVORITES_EMPTY:\r\n            return { ...state, favorites: [] };\r\n        case REQUEST_FAVORITES_SUCCESS:\r\n            return { ...state, favorites: action.payload };\r\n        case ADD_FAVORITE:\r\n            return { ...state, favorites: action.payload };\r\n        case DELETE_FAVORITE:\r\n            return { ...state, favorites: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialStateAdded = {\r\n    isAdded: false\r\n}\r\n\r\nexport const addedConfirmation = (state=initialStateAdded, action={}) => {\r\n    switch(action.type) {\r\n        case SHOW_CONFIRMATION:\r\n            return { ...state, isAdded: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst initialStatePage = {\r\n    page: 'home'\r\n}\r\n\r\nexport const changePage = (state=initialStatePage, action={}) => {\r\n    switch (action.type) {\r\n        case FAVORITES_PAGE:\r\n            return { ...state, page: action.payload };\r\n        case HOME_PAGE:\r\n            return { ...state, page: 'home'};\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers, compose } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport { searchPictures, requestPictures, favoritesReducer, changePage, addedConfirmation } from './reducers';\nimport 'tachyons';\n\nconst logger = createLogger();\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst rootReducer = combineReducers({ searchPictures, requestPictures, favoritesReducer, changePage, addedConfirmation })\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware, logger)))\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}